@charset "UTF-8";

body.customize-support {
  /* margin-top: 32px; */
}

body.customize-support header {
  /* top: 32px !important; */
}

@media (max-width: 900px) {
  #wpadminbar {
    display: none;
  }
}

body.customize-support main {
  padding-top: 0 !important;
}

/** w3school custom select */
/*the container must be positioned relative:*/
.custom-select {
  position: relative;
  font-family: Roboto;
}

.custom-select select {
  display: none;
  /*hide original SELECT element:*/
}

.select-selected {
  background-color: var(--light-100-color);
}

/*style the arrow inside the select element:*/
.select-selected:after {
  position: absolute;
  content: "";
  top: 14px;
  right: 10px;
  width: 0;
  height: 0;
  border: 6px solid transparent;
  border-color: var(--accent-color) transparent transparent transparent;
}

/*point the arrow upwards when the select box is open (active):*/
.select-selected.select-arrow-active:after {
  border-color: transparent transparent var(--accent-color) transparent;
  top: 7px;
}

/*style the items (options), including the selected item:*/
.select-items div,
.select-selected {
  padding: 0.25rem 0.5rem;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
  cursor: pointer;
  user-select: none;
  border-radius: 0.25rem;
}

/*style items (options):*/
.select-items {
  position: absolute;
  background-color: var(--light-100-color);
  top: 100%;
  left: 0;
  right: 0;
  z-index: 99;
}

/*hide the items when the select box is closed:*/
.select-hide {
  display: none;
}

.select-items div:hover,
.same-as-selected {
  background-color: rgba(0, 0, 0, 0.1);
}

/* The Modal (background) */

.image-modal .modal-content {
  width: 80%;
  max-width: 700px;
}

/* Caption of Modal Image */
#modalImageCaption {
  width: 80%;
  max-width: 700px;
  height: 150px;
}

/* Add Animation */
.modal-content,
#modalImageCaption {
  -webkit-animation-name: zoom;
  -webkit-animation-duration: 0.6s;
  animation-name: zoom;
  animation-duration: 0.6s;
}

@-webkit-keyframes zoom {
  from {
    -webkit-transform: scale(0);
  }

  to {
    -webkit-transform: scale(1);
  }
}

@keyframes zoom {
  from {
    transform: scale(0);
  }

  to {
    transform: scale(1);
  }
}

/* The Close Button */
.close {
  transition: 0.3s;
}

.close:hover,
.close:focus {
  color: #bbb;
  text-decoration: none;
  cursor: pointer;
}

/* 100% Image Width on Smaller Screens */
@media only screen and (max-width: 700px) {
  .image-modal .modal-content {
    width: 100%;
  }
}

.show-img {
  transition: transform 0.2s;
}

.line-clamp-3 {
  overflow: hidden;
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 3;
}

.feedback-page p {
  display: flex;
  flex-direction: row;
}

.feedback-page p {
  display: flex;
  flex-direction: row;
}

.feedback-page p img {
  flex: 1;
}

@media (max-width: 767px) {
  .feedback-page p {
    flex-direction: column;
  }

  .feedback-page p img {
    width: 100%;
    height: auto;
  }
}

.toc_number {
  display: none !important;
}
.logoVT {
  font-size: 1.3rem;
  font-weight: bold;
  padding-top: 9px;
  transition: font-size 0.3s ease;
}
.logoVT:hover {
  font-size: 1.4rem;
}
@media (max-width: 768px) {
  .logoVT {
    font-size: 0.8rem;
    margin-top: 8.5px;
  }
}
.maxlead {
  display: block;
  position: fixed;
  left: 8px;
  top: 65%;
  z-index: 998;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
  text-align: right;
}
.maxlead .lead-item {
  position: relative;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin: 10px 0;
}
.maxlead .lead-item .item-icon.contact-icon:after,
.maxlead .lead-item .item-icon.contact-icon:before {
  content: "";
  margin: 0 auto;
  position: absolute;
  top: 50%;
  left: 50%;
  opacity: 0;
  -webkit-transform: translate(-50%, -50%) scale(0);
  -moz-transform: translate(-50%, -50%) scale(0);
  -ms-transform: translate(-50%, -50%) scale(0);
  -o-transform: translate(-50%, -50%) scale(0);
  border: 5px solid #feaf88;
  width: 100px;
  height: 100px;
  border-radius: 100%;
}
.maxlead .lead-item .item-icon.contact-icon:before {
  display: block;
  -webkit-animation: spread-fade 1s ease-in infinite;
  animation: spread-fade 1s ease-in infinite;
}
.maxlead .lead-item .item-icon.contact-icon:after {
  display: block;
  -webkit-animation: spread-fade 1s 0.2s ease-in infinite;
  animation: spread-fade 1s 0.2s ease-in infinite;
}

.maxlead .lead-item .item-icon.messenger:before {
  display: block;
  -webkit-animation: spread-fade 1s ease-in infinite;
  animation: spread-fade 1s ease-in infinite;
}
.maxlead .lead-item .item-icon.messenger:after {
  display: block;
  -webkit-animation: spread-fade 1s 0.2s ease-in infinite;
  animation: spread-fade 1s 0.2s ease-in infinite;
}
.maxlead .lead-item .item-txt {
  opacity: 0;
  visibility: hidden;
  color: #fff;
  background: #0277bd;
  font-size: 12px;
  line-height: 16px;
  text-align: center;
  white-space: nowrap;
  border-radius: 4px;
  padding: 8px;
  -webkit-transition: opacity 0.6s ease 0s;
  -moz-transition: opacity 0.6s ease 0s;
  -ms-transition: opacity 0.6s ease 0s;
  -o-transition: opacity 0.6s ease 0s;
  transition: opacity 0.6s ease 0s;
  font-weight: 400;
  position: absolute;
  top: 50%;
  left: 51px;
  -webkit-transform: translate(0, -50%);
  -moz-transform: translate(0, -50%);
  -ms-transform: translate(0, -50%);
  -o-transform: translate(0, -50%);
}
.maxlead .lead-item:hover .item-txt {
  opacity: 0.9;
  visibility: visible;
}
.item-txt.item-contact {
  margin-left: 8px;
  opacity: 1 !important;
  visibility: visible !important;
}
@media (max-width: 768px) {
  .maxlead .lead-item:hover .item-txt.item-contact {
    opacity: 0.9;
    visibility: visible;
  }
}
@-webkit-keyframes spread-fade {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(0);
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  to {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}

@keyframes spread-fade {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(0);
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  10% {
    opacity: 1;
  }
  to {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}
/* CSS cho container để căn giữa */
/* CSS cho container để căn giữa */
.containerOne {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px;
  background-color: #f4f4f4;
  margin: 0;
  position: relative;
}

/* CSS cho khối chính */
.addXacMinh {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  background-color: #0056a1;
  color: white;
  font-weight: bold;
  font-size: 16px;
  width: 300px;
  height: 50px;
  border-radius: 5px;
  text-transform: uppercase;
  text-decoration: none;
  overflow: hidden;
  z-index: 1;
  box-shadow: 0 0 10px 2px #feaf88; /* Ánh sáng mặc định */
  animation: glow-border 2s infinite;
}

/* CSS cho liên kết */
.addXacMinh a {
  color: white;
  text-decoration: none;
  z-index: 2;
}

/* Sóng nước lan tỏa */
.addXacMinh:before,
.addXacMinh:after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100px;
  height: 100px;
  border: 5px solid #feaf88;
  border-radius: 50%;
  opacity: 0;
  transform: translate(-50%, -50%) scale(0);
  animation: spread-fade1 1.5s ease-in-out infinite;
}

.addXacMinh:after {
  animation-delay: 0.3s; /* Hiệu ứng thứ hai chậm hơn */
}
@-webkit-keyframes spread-fade1 {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(0);
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  to {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}

@keyframes spread-fade1 {
  0% {
    -webkit-transform: translate(-50%, -50%) scale(0);
    transform: translate(-50%, -50%) scale(0);
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  to {
    -webkit-transform: translate(-50%, -50%) scale(1);
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}
@keyframes glow-border {
  0% {
    box-shadow: 0 0 10px 2px #feaf88;
  }
  25% {
    box-shadow: 0 0 15px 4px #ff6f61;
  }
  50% {
    box-shadow: 0 0 20px 6px #ffc107;
  }
  75% {
    box-shadow: 0 0 15px 4px #4caf50;
  }
  100% {
    box-shadow: 0 0 10px 2px #feaf88;
  }
}

@media (min-width: 1024px) {
  .edit-margin0 {
    margin-left: 40px;
  }
  .edit-margin1 {
    margin-left: 80px;
  }

  .edit-margin2 {
    margin-left: 120px;
  }
}
.animated-border {
  position: relative;
  display: inline-block;
  padding: 6px 12px;
  border-radius: 9999px;
  font-size: 1rem;
  background-color: #e4a742; /* màu vàng giống ảnh */
  color: white;
  text-align: center;
  text-decoration: none;
  overflow: hidden;
  z-index: 0;
}

.animated-border::before {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  background: linear-gradient(60deg, #ff6a00, #ffcc00, #ff6a00, #ffcc00);
  background-size: 300% 300%;
  border-radius: 9999px;
  z-index: -1;
  animation: borderShine 3s linear infinite;
}

@keyframes borderShine {
  0% {
    background-position: 0% 50%;
  }
  100% {
    background-position: 300% 50%;
  }
}

@media (max-width: 768px) {
  .maxlead {
    position: relative !important; /* thay vì static */
    bottom: 80px !important; /* hoặc giá trị nào bạn muốn */
    left: 0 !important;
    transform: none !important;
    text-align: left;
  }
}
/* .js {
  max-width: 280px;
  width: 100%;
}
@media (min-width: 2000px) {
  .js {
    max-width: 480px !important;
    width: 100%;
  }
} */
@media (min-width: 1024px) {
  .small-image {
    height: 380px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 1098px) {
  .small-image {
    height: 480px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 1200px) {
  .small-image {
    height: 580px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 1700px) {
  .small-image {
    height: 720px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 2024px) {
  .small-image {
    height: 730px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 2100px) {
  .small-image {
    height: 800px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 2224px) {
  .small-image {
    height: 900px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 2500px) {
  .small-image {
    height: 1180px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 2500px) {
  .small-image {
    height: 1180px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
@media (min-width: 3000px) {
  .small-image {
    height: 1380px !important;
    width: 100%;
    object-fit: cover !important;
  }
}
/* @media (min-width: 1280px) {
  .container {
    max-width: 1536px; 
  }
} */

/* Bạn cũng có thể thêm một breakpoint lớn hơn nữa nếu cần, ví dụ cho màn hình 4K 
*/
/* @media (min-width: 1536px) {
  .container {
    max-width: 1920px;
  }
} */
/* Bắt đầu các quy tắc ghi đè cho màn hình desktop (từ 1024px trở lên) */
@media (min-width: 1024px) {
  /* --- 1. Sửa lỗi cho Menu chính (ul#header-menu) --- */

  /* Hiển thị menu chính dưới dạng flexbox */
  #header-menu {
    display: flex !important;
    position: static !important; /* Chuyển từ absolute (kiểu mobile) sang static (kiểu desktop) */
    height: 100% !important; /* Chiều cao bằng header, không phải toàn màn hình */
    background-color: transparent !important; /* Bỏ nền trắng của mobile overlay */
    margin-left: 1rem !important; /* Thêm một chút khoảng cách */

    /* Vô hiệu hóa các thuộc tính của menu mobile */
    top: auto;
    left: auto;
    right: auto;
    bottom: auto;
  }

  /* --- 2. Ẩn các thành phần của giao diện mobile --- */

  /* Ẩn nút toggle (hamburger menu) */
  #toggleMenuButton {
    display: none !important;
  }

  /* Ẩn nút Zalo trên thanh header */
  /* Lưu ý: Chúng ta nhắm vào thẻ div cha của nút Zalo */
  #header .flex-1.justify-end.items-center {
    display: none !important;
  }

  /* --- 3. Căn chỉnh và tạo kiểu cho các mục menu --- */

  /* Căn chỉnh các mục menu con trực tiếp của ul */
  #header-menu > li.menu-item {
    display: flex;
    align-items: center;
    position: relative; /* Cần cho menu con (sub-menu) */
    /* Tạo khoảng cách giữa các mục menu */
  }

  /* --- 4. Tạo kiểu cho menu con (sub-menu) --- */

  /* Ẩn menu con theo mặc định */
  #header-menu .sub-menu {
    display: none;
    position: absolute;
    top: 100%; /* Hiển thị ngay bên dưới mục menu cha */
    left: 0;
    background-color: white;
    min-width: 250px; /* Độ rộng tối thiểu của menu con */
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    border-radius: 4px;
    z-index: 100; /* Đảm bảo menu con nổi lên trên */
    list-style: none;
    padding: 0;
    border: 1px solid #eee;
  }

  /* Các mục trong menu con */
  #header-menu .sub-menu li a {
    color: #333; /* Màu chữ cho menu con */
    padding: 12px 15px;
    display: block;
    white-space: nowrap; /* Ngăn không cho chữ xuống dòng */
  }

  /* Thay đổi màu khi di chuột vào mục trong menu con */
  #header-menu .sub-menu li a:hover {
    background-color: #f5f5f5;
  }

  /* Hiển thị menu con khi di chuột vào mục menu cha */
  #header-menu > li.menu-item:hover > .sub-menu {
    display: block;
  }
}
.logo-design {
  display: flex;
  justify-content: center;
}
